Metadata-Version: 2.1
Name: jupyterlab_frontegg
Version: 0.1.0
Summary: Build Weav AI
Home-page: https://github.com/chaitanyamoon/jupyterlab_frontegg
Author: chaitanya
Author-email: chaitanya.moon@konverge.ai
License: BSD-3-Clause
Description: # jupyterlab_frontegg
        
        ![Github Actions Status](https://github.com/chaitanyamoon/jupyterlab_frontegg/workflows/Build/badge.svg)[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/chaitanyamoon/jupyterlab_frontegg/main?urlpath=lab)
        
        Build Weav AI
        
        
        
        ## Requirements
        
        * JupyterLab >= 3.0
        
        ## Install
        
        To install the extension, execute:
        
        ```bash
        pip install jupyterlab_frontegg
        ```
        
        ## Uninstall
        
        To remove the extension, execute:
        
        ```bash
        pip uninstall jupyterlab_frontegg
        ```
        
        
        ## Contributing
        
        ### Development install
        
        Note: You will need NodeJS to build the extension package.
        
        The `jlpm` command is JupyterLab's pinned version of
        [yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use
        `yarn` or `npm` in lieu of `jlpm` below.
        
        ```bash
        # Clone the repo to your local environment
        # Change directory to the jupyterlab_frontegg directory
        # Install package in development mode
        pip install -e .
        # Link your development version of the extension with JupyterLab
        jupyter labextension develop . --overwrite
        # Rebuild extension Typescript source after making changes
        jlpm run build
        ```
        
        You can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.
        
        ```bash
        # Watch the source directory in one terminal, automatically rebuilding when needed
        jlpm run watch
        # Run JupyterLab in another terminal
        jupyter lab
        ```
        
        With the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).
        
        By default, the `jlpm run build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:
        
        ```bash
        jupyter lab build --minimize=False
        ```
        
        ### Development uninstall
        
        ```bash
        pip uninstall jupyterlab_frontegg
        ```
        
        In development mode, you will also need to remove the symlink created by `jupyter labextension develop`
        command. To find its location, you can run `jupyter labextension list` to figure out where the `labextensions`
        folder is located. Then you can remove the symlink named `jupyterlab_frontegg` within that folder.
        
Keywords: Jupyter,JupyterLab,JupyterLab3
Platform: Linux
Platform: Mac OS X
Platform: Windows
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Framework :: Jupyter
Requires-Python: >=3.6
Description-Content-Type: text/markdown
