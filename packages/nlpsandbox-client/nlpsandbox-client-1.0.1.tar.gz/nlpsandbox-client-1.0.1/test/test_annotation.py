"""
    NLP Sandbox Data Node API

    # Overview  The NLP Sandbox Data Node is a repository of data used to benchmark NLP Tools like the NLP Sandbox Date Annotator and Person Name Annotator.  The resources that can be stored in this Data Node and the operations supported are listed below:  - Create and manage datasets - Create and manage FHIR stores   - Store and retrieve FHIR patient profiles   - Store and retrieve clinical   notes - Create and manage annotation stores   - Store and retrieve text annotations   # noqa: E501

    The version of the OpenAPI document: 1.0.2
    Contact: thomas.schaffter@sagebionetworks.org
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import datanode
from datanode.model.annotation_name import AnnotationName
from datanode.model.annotation_source import AnnotationSource
from datanode.model.resource_source import ResourceSource
from datanode.model.text_date_annotation import TextDateAnnotation
from datanode.model.text_person_name_annotation import TextPersonNameAnnotation
from datanode.model.text_physical_address_annotation import TextPhysicalAddressAnnotation
globals()['AnnotationName'] = AnnotationName
globals()['AnnotationSource'] = AnnotationSource
globals()['TextDateAnnotation'] = TextDateAnnotation
globals()['TextPersonNameAnnotation'] = TextPersonNameAnnotation
globals()['TextPhysicalAddressAnnotation'] = TextPhysicalAddressAnnotation
from datanode.model.annotation import Annotation


class TestAnnotation(unittest.TestCase):
    """Annotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testAnnotation(self):
        """Test Annotation"""
        # FIXME: construct object with mandatory attributes with example values
        model = Annotation(
            name=AnnotationName("name"),
            annotation_source=AnnotationSource(resource_source=ResourceSource(name="foo")),
            text_date_annotations=[
                TextDateAnnotation(start=1, length=32, text='foo', confidence=95.5)
            ],
            text_person_name_annotations=[
                TextPersonNameAnnotation(start=1, length=32, text='foo', confidence=95.5)
            ],
            text_physical_address_annotations=[
                TextPhysicalAddressAnnotation(start=1, length=32, text='foo', confidence=95.5)
            ]
        )


if __name__ == '__main__':
    unittest.main()
