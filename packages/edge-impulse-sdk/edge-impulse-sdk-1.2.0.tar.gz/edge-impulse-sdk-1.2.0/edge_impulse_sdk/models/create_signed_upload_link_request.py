# coding: utf-8

"""
    Edge Impulse API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from edge_impulse_sdk.configuration import Configuration


class CreateSignedUploadLinkRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'file_name': 'str',
        'file_size': 'int',
        'file_hash': 'str'
    }

    attribute_map = {
        'file_name': 'fileName',
        'file_size': 'fileSize',
        'file_hash': 'fileHash'
    }

    def __init__(self, file_name=None, file_size=None, file_hash=None, local_vars_configuration=None):  # noqa: E501
        """CreateSignedUploadLinkRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._file_name = None
        self._file_size = None
        self._file_hash = None
        self.discriminator = None

        self.file_name = file_name
        self.file_size = file_size
        self.file_hash = file_hash

    @property
    def file_name(self):
        """Gets the file_name of this CreateSignedUploadLinkRequest.  # noqa: E501

        file name  # noqa: E501

        :return: The file_name of this CreateSignedUploadLinkRequest.  # noqa: E501
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this CreateSignedUploadLinkRequest.

        file name  # noqa: E501

        :param file_name: The file_name of this CreateSignedUploadLinkRequest.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and file_name is None:  # noqa: E501
            raise ValueError("Invalid value for `file_name`, must not be `None`")  # noqa: E501

        self._file_name = file_name

    @property
    def file_size(self):
        """Gets the file_size of this CreateSignedUploadLinkRequest.  # noqa: E501

        file size in bytes  # noqa: E501

        :return: The file_size of this CreateSignedUploadLinkRequest.  # noqa: E501
        :rtype: int
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this CreateSignedUploadLinkRequest.

        file size in bytes  # noqa: E501

        :param file_size: The file_size of this CreateSignedUploadLinkRequest.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and file_size is None:  # noqa: E501
            raise ValueError("Invalid value for `file_size`, must not be `None`")  # noqa: E501

        self._file_size = file_size

    @property
    def file_hash(self):
        """Gets the file_hash of this CreateSignedUploadLinkRequest.  # noqa: E501

        hash to identify file changes  # noqa: E501

        :return: The file_hash of this CreateSignedUploadLinkRequest.  # noqa: E501
        :rtype: str
        """
        return self._file_hash

    @file_hash.setter
    def file_hash(self, file_hash):
        """Sets the file_hash of this CreateSignedUploadLinkRequest.

        hash to identify file changes  # noqa: E501

        :param file_hash: The file_hash of this CreateSignedUploadLinkRequest.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and file_hash is None:  # noqa: E501
            raise ValueError("Invalid value for `file_hash`, must not be `None`")  # noqa: E501

        self._file_hash = file_hash

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateSignedUploadLinkRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CreateSignedUploadLinkRequest):
            return True

        return self.to_dict() != other.to_dict()
