# coding: utf-8

"""
    Edge Impulse API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from edge_impulse_sdk.configuration import Configuration


class Impulse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'input_blocks': 'list[ImpulseInputBlock]',
        'dsp_blocks': 'list[ImpulseDspBlock]',
        'learn_blocks': 'list[ImpulseLearnBlock]'
    }

    attribute_map = {
        'input_blocks': 'inputBlocks',
        'dsp_blocks': 'dspBlocks',
        'learn_blocks': 'learnBlocks'
    }

    def __init__(self, input_blocks=None, dsp_blocks=None, learn_blocks=None, local_vars_configuration=None):  # noqa: E501
        """Impulse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._input_blocks = None
        self._dsp_blocks = None
        self._learn_blocks = None
        self.discriminator = None

        self.input_blocks = input_blocks
        self.dsp_blocks = dsp_blocks
        self.learn_blocks = learn_blocks

    @property
    def input_blocks(self):
        """Gets the input_blocks of this Impulse.  # noqa: E501

        Input Blocks that are part of this impulse  # noqa: E501

        :return: The input_blocks of this Impulse.  # noqa: E501
        :rtype: list[ImpulseInputBlock]
        """
        return self._input_blocks

    @input_blocks.setter
    def input_blocks(self, input_blocks):
        """Sets the input_blocks of this Impulse.

        Input Blocks that are part of this impulse  # noqa: E501

        :param input_blocks: The input_blocks of this Impulse.  # noqa: E501
        :type: list[ImpulseInputBlock]
        """
        if self.local_vars_configuration.client_side_validation and input_blocks is None:  # noqa: E501
            raise ValueError("Invalid value for `input_blocks`, must not be `None`")  # noqa: E501

        self._input_blocks = input_blocks

    @property
    def dsp_blocks(self):
        """Gets the dsp_blocks of this Impulse.  # noqa: E501

        DSP Blocks that are part of this impulse  # noqa: E501

        :return: The dsp_blocks of this Impulse.  # noqa: E501
        :rtype: list[ImpulseDspBlock]
        """
        return self._dsp_blocks

    @dsp_blocks.setter
    def dsp_blocks(self, dsp_blocks):
        """Sets the dsp_blocks of this Impulse.

        DSP Blocks that are part of this impulse  # noqa: E501

        :param dsp_blocks: The dsp_blocks of this Impulse.  # noqa: E501
        :type: list[ImpulseDspBlock]
        """
        if self.local_vars_configuration.client_side_validation and dsp_blocks is None:  # noqa: E501
            raise ValueError("Invalid value for `dsp_blocks`, must not be `None`")  # noqa: E501

        self._dsp_blocks = dsp_blocks

    @property
    def learn_blocks(self):
        """Gets the learn_blocks of this Impulse.  # noqa: E501

        Learning Blocks that are part of this impulse  # noqa: E501

        :return: The learn_blocks of this Impulse.  # noqa: E501
        :rtype: list[ImpulseLearnBlock]
        """
        return self._learn_blocks

    @learn_blocks.setter
    def learn_blocks(self, learn_blocks):
        """Sets the learn_blocks of this Impulse.

        Learning Blocks that are part of this impulse  # noqa: E501

        :param learn_blocks: The learn_blocks of this Impulse.  # noqa: E501
        :type: list[ImpulseLearnBlock]
        """
        if self.local_vars_configuration.client_side_validation and learn_blocks is None:  # noqa: E501
            raise ValueError("Invalid value for `learn_blocks`, must not be `None`")  # noqa: E501

        self._learn_blocks = learn_blocks

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Impulse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, Impulse):
            return True

        return self.to_dict() != other.to_dict()
