# coding: utf-8

"""
    Edge Impulse API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from edge_impulse_sdk.configuration import Configuration


class OrganizationInfoResponseAllOf(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'organization': 'Organization',
        'datasets': 'list[OrganizationInfoResponseAllOfDatasets]',
        'default_compute_limits': 'OrganizationInfoResponseAllOfDefaultComputeLimits'
    }

    attribute_map = {
        'organization': 'organization',
        'datasets': 'datasets',
        'default_compute_limits': 'defaultComputeLimits'
    }

    def __init__(self, organization=None, datasets=None, default_compute_limits=None, local_vars_configuration=None):  # noqa: E501
        """OrganizationInfoResponseAllOf - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._organization = None
        self._datasets = None
        self._default_compute_limits = None
        self.discriminator = None

        self.organization = organization
        self.datasets = datasets
        self.default_compute_limits = default_compute_limits

    @property
    def organization(self):
        """Gets the organization of this OrganizationInfoResponseAllOf.  # noqa: E501


        :return: The organization of this OrganizationInfoResponseAllOf.  # noqa: E501
        :rtype: Organization
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this OrganizationInfoResponseAllOf.


        :param organization: The organization of this OrganizationInfoResponseAllOf.  # noqa: E501
        :type: Organization
        """
        if self.local_vars_configuration.client_side_validation and organization is None:  # noqa: E501
            raise ValueError("Invalid value for `organization`, must not be `None`")  # noqa: E501

        self._organization = organization

    @property
    def datasets(self):
        """Gets the datasets of this OrganizationInfoResponseAllOf.  # noqa: E501


        :return: The datasets of this OrganizationInfoResponseAllOf.  # noqa: E501
        :rtype: list[OrganizationInfoResponseAllOfDatasets]
        """
        return self._datasets

    @datasets.setter
    def datasets(self, datasets):
        """Sets the datasets of this OrganizationInfoResponseAllOf.


        :param datasets: The datasets of this OrganizationInfoResponseAllOf.  # noqa: E501
        :type: list[OrganizationInfoResponseAllOfDatasets]
        """
        if self.local_vars_configuration.client_side_validation and datasets is None:  # noqa: E501
            raise ValueError("Invalid value for `datasets`, must not be `None`")  # noqa: E501

        self._datasets = datasets

    @property
    def default_compute_limits(self):
        """Gets the default_compute_limits of this OrganizationInfoResponseAllOf.  # noqa: E501


        :return: The default_compute_limits of this OrganizationInfoResponseAllOf.  # noqa: E501
        :rtype: OrganizationInfoResponseAllOfDefaultComputeLimits
        """
        return self._default_compute_limits

    @default_compute_limits.setter
    def default_compute_limits(self, default_compute_limits):
        """Sets the default_compute_limits of this OrganizationInfoResponseAllOf.


        :param default_compute_limits: The default_compute_limits of this OrganizationInfoResponseAllOf.  # noqa: E501
        :type: OrganizationInfoResponseAllOfDefaultComputeLimits
        """
        if self.local_vars_configuration.client_side_validation and default_compute_limits is None:  # noqa: E501
            raise ValueError("Invalid value for `default_compute_limits`, must not be `None`")  # noqa: E501

        self._default_compute_limits = default_compute_limits

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrganizationInfoResponseAllOf):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, OrganizationInfoResponseAllOf):
            return True

        return self.to_dict() != other.to_dict()
