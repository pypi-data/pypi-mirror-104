# coding: utf-8

"""
    Edge Impulse API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from edge_impulse_sdk.configuration import Configuration


class PortalFile(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'name': 'str',
        'added_date': 'datetime',
        'size': 'int',
        'e_tag': 'str',
        'path': 'str'
    }

    attribute_map = {
        'name': 'name',
        'added_date': 'addedDate',
        'size': 'size',
        'e_tag': 'ETag',
        'path': 'path'
    }

    def __init__(self, name=None, added_date=None, size=None, e_tag=None, path=None, local_vars_configuration=None):  # noqa: E501
        """PortalFile - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._name = None
        self._added_date = None
        self._size = None
        self._e_tag = None
        self._path = None
        self.discriminator = None

        self.name = name
        if added_date is not None:
            self.added_date = added_date
        if size is not None:
            self.size = size
        if e_tag is not None:
            self.e_tag = e_tag
        self.path = path

    @property
    def name(self):
        """Gets the name of this PortalFile.  # noqa: E501


        :return: The name of this PortalFile.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PortalFile.


        :param name: The name of this PortalFile.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and name is None:  # noqa: E501
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def added_date(self):
        """Gets the added_date of this PortalFile.  # noqa: E501


        :return: The added_date of this PortalFile.  # noqa: E501
        :rtype: datetime
        """
        return self._added_date

    @added_date.setter
    def added_date(self, added_date):
        """Sets the added_date of this PortalFile.


        :param added_date: The added_date of this PortalFile.  # noqa: E501
        :type: datetime
        """

        self._added_date = added_date

    @property
    def size(self):
        """Gets the size of this PortalFile.  # noqa: E501


        :return: The size of this PortalFile.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this PortalFile.


        :param size: The size of this PortalFile.  # noqa: E501
        :type: int
        """

        self._size = size

    @property
    def e_tag(self):
        """Gets the e_tag of this PortalFile.  # noqa: E501


        :return: The e_tag of this PortalFile.  # noqa: E501
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this PortalFile.


        :param e_tag: The e_tag of this PortalFile.  # noqa: E501
        :type: str
        """

        self._e_tag = e_tag

    @property
    def path(self):
        """Gets the path of this PortalFile.  # noqa: E501


        :return: The path of this PortalFile.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this PortalFile.


        :param path: The path of this PortalFile.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and path is None:  # noqa: E501
            raise ValueError("Invalid value for `path`, must not be `None`")  # noqa: E501

        self._path = path

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PortalFile):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PortalFile):
            return True

        return self.to_dict() != other.to_dict()
