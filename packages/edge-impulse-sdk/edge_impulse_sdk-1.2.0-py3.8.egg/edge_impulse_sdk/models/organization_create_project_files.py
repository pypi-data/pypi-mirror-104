# coding: utf-8

"""
    Edge Impulse API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from edge_impulse_sdk.configuration import Configuration


class OrganizationCreateProjectFiles(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'int',
        'file_name': 'str',
        'data_item_id': 'int',
        'data_item_name': 'str',
        'transformation_job_id': 'int',
        'transformation_job_status': 'str'
    }

    attribute_map = {
        'id': 'id',
        'file_name': 'fileName',
        'data_item_id': 'dataItemId',
        'data_item_name': 'dataItemName',
        'transformation_job_id': 'transformationJobId',
        'transformation_job_status': 'transformationJobStatus'
    }

    def __init__(self, id=None, file_name=None, data_item_id=None, data_item_name=None, transformation_job_id=None, transformation_job_status=None, local_vars_configuration=None):  # noqa: E501
        """OrganizationCreateProjectFiles - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._file_name = None
        self._data_item_id = None
        self._data_item_name = None
        self._transformation_job_id = None
        self._transformation_job_status = None
        self.discriminator = None

        self.id = id
        self.file_name = file_name
        self.data_item_id = data_item_id
        self.data_item_name = data_item_name
        if transformation_job_id is not None:
            self.transformation_job_id = transformation_job_id
        self.transformation_job_status = transformation_job_status

    @property
    def id(self):
        """Gets the id of this OrganizationCreateProjectFiles.  # noqa: E501


        :return: The id of this OrganizationCreateProjectFiles.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrganizationCreateProjectFiles.


        :param id: The id of this OrganizationCreateProjectFiles.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and id is None:  # noqa: E501
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def file_name(self):
        """Gets the file_name of this OrganizationCreateProjectFiles.  # noqa: E501


        :return: The file_name of this OrganizationCreateProjectFiles.  # noqa: E501
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this OrganizationCreateProjectFiles.


        :param file_name: The file_name of this OrganizationCreateProjectFiles.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and file_name is None:  # noqa: E501
            raise ValueError("Invalid value for `file_name`, must not be `None`")  # noqa: E501

        self._file_name = file_name

    @property
    def data_item_id(self):
        """Gets the data_item_id of this OrganizationCreateProjectFiles.  # noqa: E501


        :return: The data_item_id of this OrganizationCreateProjectFiles.  # noqa: E501
        :rtype: int
        """
        return self._data_item_id

    @data_item_id.setter
    def data_item_id(self, data_item_id):
        """Sets the data_item_id of this OrganizationCreateProjectFiles.


        :param data_item_id: The data_item_id of this OrganizationCreateProjectFiles.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and data_item_id is None:  # noqa: E501
            raise ValueError("Invalid value for `data_item_id`, must not be `None`")  # noqa: E501

        self._data_item_id = data_item_id

    @property
    def data_item_name(self):
        """Gets the data_item_name of this OrganizationCreateProjectFiles.  # noqa: E501


        :return: The data_item_name of this OrganizationCreateProjectFiles.  # noqa: E501
        :rtype: str
        """
        return self._data_item_name

    @data_item_name.setter
    def data_item_name(self, data_item_name):
        """Sets the data_item_name of this OrganizationCreateProjectFiles.


        :param data_item_name: The data_item_name of this OrganizationCreateProjectFiles.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and data_item_name is None:  # noqa: E501
            raise ValueError("Invalid value for `data_item_name`, must not be `None`")  # noqa: E501

        self._data_item_name = data_item_name

    @property
    def transformation_job_id(self):
        """Gets the transformation_job_id of this OrganizationCreateProjectFiles.  # noqa: E501


        :return: The transformation_job_id of this OrganizationCreateProjectFiles.  # noqa: E501
        :rtype: int
        """
        return self._transformation_job_id

    @transformation_job_id.setter
    def transformation_job_id(self, transformation_job_id):
        """Sets the transformation_job_id of this OrganizationCreateProjectFiles.


        :param transformation_job_id: The transformation_job_id of this OrganizationCreateProjectFiles.  # noqa: E501
        :type: int
        """

        self._transformation_job_id = transformation_job_id

    @property
    def transformation_job_status(self):
        """Gets the transformation_job_status of this OrganizationCreateProjectFiles.  # noqa: E501


        :return: The transformation_job_status of this OrganizationCreateProjectFiles.  # noqa: E501
        :rtype: str
        """
        return self._transformation_job_status

    @transformation_job_status.setter
    def transformation_job_status(self, transformation_job_status):
        """Sets the transformation_job_status of this OrganizationCreateProjectFiles.


        :param transformation_job_status: The transformation_job_status of this OrganizationCreateProjectFiles.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and transformation_job_status is None:  # noqa: E501
            raise ValueError("Invalid value for `transformation_job_status`, must not be `None`")  # noqa: E501
        allowed_values = ["waiting", "created", "started", "finished", "failed"]  # noqa: E501
        if self.local_vars_configuration.client_side_validation and transformation_job_status not in allowed_values:  # noqa: E501
            raise ValueError(
                "Invalid value for `transformation_job_status` ({0}), must be one of {1}"  # noqa: E501
                .format(transformation_job_status, allowed_values)
            )

        self._transformation_job_status = transformation_job_status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrganizationCreateProjectFiles):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, OrganizationCreateProjectFiles):
            return True

        return self.to_dict() != other.to_dict()
