"""
pytermgui.globals
-----------------
author: bczsalba


Module providing global variables for ui.py & input.py.

NOTE:
    I am aware that much of this is bad practice, however
    I could not find a way to solve the issue without extreme
    bloat. 
"""

import os, sys
from . import color, bold, highlight, italic

# template for files generated
STYLE_FILE_TEMPLATE = f"""\
#!{sys.executable}

# < file generated by pytermgui >
from pytermgui import set_style, color, bold, italic, gradient, get_gradient, highlight, underline, strikethrough
"""

# global width & height -- refreshed at every new object creation
WIDTH, HEIGHT = os.get_terminal_size()

# element_id - object
## set by calling set_element_id(element,id),
## and values used through get_object_by_id(id).
ELEMENT_IDS = {}

# element_id - [attribute,value]
## this is applied in set_element_id, to every element
## matching the given element_id
ELEMENT_ATTRIBUTES = {}

# style variables to serialize
## you can add arbitrary variables & functions to this list:
##  - functions: use the @style decorator
##  - variables: call serialize_variable(name, value)
SERIALIZED_STYLES = [
    "DEFAULT_COLOR_PREFIX",
    "GLOBAL_HIGHLIGHT_STYLE",
    "CURSOR_HIGHLIGHT_STYLE",
    "TABBAR_HIGHLIGHT_STYLE",
    "CONTAINER_BORDER_CHARS",
    "CONTAINER_BORDER_STYLE",
    "CONTAINER_CORNER_STYLE",
    "CONTAINER_CORNER_CHARS",
    "CONTAINER_LABEL_STYLE",
    "CONTAINER_VALUE_STYLE",
    "CONTAINER_TITLE_STYLE",
    "CONTAINER_ERROR_STYLE",
    "CONTAINER_SUCCESS_STYLE",
    "PROMPT_LABEL_STYLE",
    "PROMPT_VALUE_STYLE",
    "PROMPT_DELIMITER_CHARS",
    "PROMPT_SHORT_HIGHLIGHT_STYLE",
    "PROMPT_LONG_HIGHLIGHT_STYLE",
    "LABEL_VALUE_STYLE",
    "INPUTFIELD_VALUE_STYLE",
    "INPUTFIELD_HIGHLIGHT_STYLE",
]


def return_item(depth, item):
    return item


## label
LABEL_VALUE_STYLE = return_item

## inputfield
INPUTFIELD_VALUE_STYLE = return_item
INPUTFIELD_HIGHLIGHT_STYLE = lambda depth, item: highlight(item, 7)

## other
DEFAULT_COLOR_PREFIX = "38;5"
GLOBAL_HIGHLIGHT_STYLE = lambda depth, item: highlight(item)
CURSOR_HIGHLIGHT_STYLE = GLOBAL_HIGHLIGHT_STYLE
TABBAR_HIGHLIGHT_STYLE = GLOBAL_HIGHLIGHT_STYLE

# container
CONTAINER_BORDER_CHARS = lambda: "|-"
CONTAINER_BORDER_STYLE = return_item
CONTAINER_CORNER_STYLE = lambda depth, item: CONTAINER_BORDER_STYLE(depth, item)
CONTAINER_CORNER_CHARS = lambda: "xxxx"
CONTAINER_LABEL_STYLE = return_item
CONTAINER_VALUE_STYLE = return_item
CONTAINER_TITLE_STYLE = lambda depth, item: italic(bold(item))
CONTAINER_ERROR_STYLE = lambda depth, item: color(bold(item), "38;5;196")
CONTAINER_SUCCESS_STYLE = lambda depth, item: color(bold(item), "2")

## prompt
PROMPT_LABEL_STYLE = return_item
PROMPT_VALUE_STYLE = return_item
PROMPT_DELIMITER_CHARS = lambda: "[]"
PROMPT_SHORT_HIGHLIGHT_STYLE = GLOBAL_HIGHLIGHT_STYLE
PROMPT_LONG_HIGHLIGHT_STYLE = GLOBAL_HIGHLIGHT_STYLE

## label
LABEL_VALUE_STYLE = return_item

## inputfield
INPUTFIELD_VALUE_STYLE = return_item
INPUTFIELD_HIGHLIGHT_STYLE = lambda depth, item: highlight(item, 7)

## slider
SLIDER_DELIMITER_CHARS = PROMPT_DELIMITER_CHARS
SLIDER_HINT_STYLE = return_item
SLIDER_FILL_STYLE = return_item
SLIDER_FILL_CHAR = "#"

VERBOSE = 0
