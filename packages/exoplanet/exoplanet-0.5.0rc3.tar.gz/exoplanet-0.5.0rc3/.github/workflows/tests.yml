name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        pymc-arviz:
          - '"pymc3~=3.9.0" "arviz<0.11"'
          - '"pymc3~=3.10.0" "arviz<0.11"'
          - '"pymc3~=3.11.0"'
          - '"https://github.com/pymc-devs/pymc3/archive/master.zip"'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install ${{ matrix.pymc-arviz }}
          python -m pip install -e .[test]
          python -m pip install --no-deps starry

      - name: Get compiledir
        id: compiledir
        shell: bash -l {0}
        run: |
          python -c "from aesara_theano_fallback import aesara; print('::set-output name=compiledir::' + aesara.config.compiledir)"

      - name: Cache compiledir
        uses: actions/cache@v2
        with:
          path: ${{ steps.compiledir.outputs.compiledir }}
          key: compiledir-${{ steps.compiledir.outputs.compiledir }}-${{ matrix.pymc-arviz }}-${{ github.sha }}
          restore-keys: |
            compiledir-${{ steps.compiledir.outputs.compiledir }}-${{ matrix.pymc-arviz }}-

      - name: Run tests
        run: python -m pytest --cov=exoplanet -v tests

      - name: Coveralls
        uses: AndreMiras/coveralls-python-action@v20201129
        with:
          parallel: true
          flag-name: Unit Tests

  coverage:
    name: "Merge and upload coverage"
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@v20201129
        with:
          parallel-finished: true

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.9"
      - name: Build sdist and wheel
        run: |
          python -m pip install -U pip
          python -m pip install -U build
          python -m build .
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*

  upload_pypi:
    needs: [tests, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
