# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from fedlearner.common import trainer_worker_service_pb2 as fedlearner_dot_common_dot_trainer__worker__service__pb2


class TrainerWorkerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Transmit = channel.stream_stream(
                '/fedlearner.common.TrainerWorkerService/Transmit',
                request_serializer=fedlearner_dot_common_dot_trainer__worker__service__pb2.TransmitRequest.SerializeToString,
                response_deserializer=fedlearner_dot_common_dot_trainer__worker__service__pb2.TransmitResponse.FromString,
                )
        self.LoadDataBlock = channel.unary_unary(
                '/fedlearner.common.TrainerWorkerService/LoadDataBlock',
                request_serializer=fedlearner_dot_common_dot_trainer__worker__service__pb2.LoadDataBlockRequest.SerializeToString,
                response_deserializer=fedlearner_dot_common_dot_trainer__worker__service__pb2.LoadDataBlockResponse.FromString,
                )


class TrainerWorkerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Transmit(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadDataBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TrainerWorkerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Transmit': grpc.stream_stream_rpc_method_handler(
                    servicer.Transmit,
                    request_deserializer=fedlearner_dot_common_dot_trainer__worker__service__pb2.TransmitRequest.FromString,
                    response_serializer=fedlearner_dot_common_dot_trainer__worker__service__pb2.TransmitResponse.SerializeToString,
            ),
            'LoadDataBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadDataBlock,
                    request_deserializer=fedlearner_dot_common_dot_trainer__worker__service__pb2.LoadDataBlockRequest.FromString,
                    response_serializer=fedlearner_dot_common_dot_trainer__worker__service__pb2.LoadDataBlockResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fedlearner.common.TrainerWorkerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TrainerWorkerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Transmit(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/fedlearner.common.TrainerWorkerService/Transmit',
            fedlearner_dot_common_dot_trainer__worker__service__pb2.TransmitRequest.SerializeToString,
            fedlearner_dot_common_dot_trainer__worker__service__pb2.TransmitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadDataBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fedlearner.common.TrainerWorkerService/LoadDataBlock',
            fedlearner_dot_common_dot_trainer__worker__service__pb2.LoadDataBlockRequest.SerializeToString,
            fedlearner_dot_common_dot_trainer__worker__service__pb2.LoadDataBlockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
